---
- name: Ensure expected root directories exists
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  loop:
    - "/etc/default/"
    - "/etc/X11/"

- name: Ensure expected user directories exists
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ username }}"
    group: "{{ username }}"
  loop:
    - "/invar/"

- name: Copy configuration files
  ignore_errors: yes
  copy:
    src: "{{ item.src  }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.own  }}"
    group: "{{ item.own  }}"
    mode: 0644
  with_items:
    - {
        src: "/home/{{ username }}/{{ mconf }}/{{ backup_location }}/dotfiles/.Xdefaults",
        dest: "/home/{{ username }}/.Xdefaults",
        own: "{{ username }}",
      }
    - {
        src: "/home/{{ username }}/{{ mconf }}/{{ backup_location }}/dotfiles/.vimrc",
        dest: "/home/{{ username }}/.vimrc",
        own: "{{ username }}",
      }

- name: Setup logind.conf options
  become: yes
  become_user: root
  lineinfile:
    path: /etc/systemd/logind.conf
    line: "{{ item }}"
  loop:
    - "HandleLidSwitch=suspend"
    - "HandlePowerKey=suspend"

# TODO: Add condition for checking if it's not raspi
- name: Copy configuration files
  become: yes
  become_user: root
  copy:
    src: "{{ item.src  }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.own  }}"
    group: "{{ item.own  }}"
    mode: 0644
  notify:
    - update grub
  with_items:
    - {
        src: "/home/{{ username }}/{{ mconf }}/{{ backup_location }}/dotfiles/grub",
        dest: "/etc/default/grub",
        own: "root",
      }

- name: Copy configuration files (raspi only)
  become: yes
  become_user: root
  copy:
    src: "{{ item.src  }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.own  }}"
    group: "{{ item.own  }}"
    mode: 0644
  with_items:
    - {
        src: "/home/{{ username }}/{{ mconf }}/{{ backup_location }}/dotfiles/xorg.raspi.conf",
        dest: "/etc/X11/xorg.conf",
        own: "root",
      }
    - {
        src: "/home/{{ username }}/{{ mconf }}/{{ backup_location }}/dotfiles/.bashrc.raspi",
        dest: "/home/{{ username }}/.bashrc",
        own: "{{ username }}",
      }
  when: ansible_hostname == "raspi"

- name: Add custom content
  blockinfile:
    path: "{{ item.path }}/{{ item.file }}"
    block: "{{ lookup('file', '/home/{{ username }}/{{ mconf }}/{{ private_backup_location }}/{{ item.file }}') }}"
    state: present
  with_items:
    - { path: "/home/{{ username }}", file: ".bashrc" }
    - { path: "/home/{{ username }}", file: ".bash_profile" }
    - { path: "/etc", file: "hosts" }

- name: Copy SSH
  copy:
    src: "/home/{{ username }}/{{ mconf }}/{{ private_backup_location }}/ssh/"
    dest: "/home/{{ username }}/.ssh/"
    owner: "{{ username }}"
    group: "{{ username }}"
    directory_mode: 0700
    mode: 0600

- name: Copy GPG
  copy:
    src: "/home/{{ username }}/{{ mconf }}/{{ private_backup_location }}/gnupg/"
    dest: "/home/{{ username }}/.gnupg/"
    owner: "{{ username }}"
    group: "{{ username }}"
    directory_mode: 0700
    mode: 0600

- name: Copy Network
  # sudo required for this task,
  # read : https://superuser.com/questions/1522927/ansible-copy-module-become-permission-denied
  copy:
    src: "/home/{{ username }}/{{ mconf }}/{{ private_backup_location }}/system-connections/"
    dest: "/etc/NetworkManager/system-connections/"
    owner: root
    group: root
    mode: 0600

- name: Copy Bluetooth
  # sudo required for this task,
  # read : https://superuser.com/questions/1522927/ansible-copy-module-become-permission-denied
  copy:
    src: "/home/{{ username }}/{{ mconf }}/{{ private_backup_location }}/bluetooth/"
    dest: "/var/lib/bluetooth/"
    owner: root
    group: root
    mode: 0600

- name: Copy /invar/
  copy:
    src: "/home/{{ username }}/{{ mconf }}/{{ private_backup_location }}/invar/"
    dest: "/invar/"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0644
    directory_mode: 0755
